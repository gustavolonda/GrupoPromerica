package com.example.myweather.openweathermap.applications.rest;


import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;

import com.example.myweather.openweathermap.domains.data.OpenWeatherMapResponse;

@RestController
@RequestMapping("/OpenWeatherMap")
public class OpenWeatherMapController {
	@Value("${open-weather-map.api-key}")
	private  String apiKeyString;
	@GetMapping
	public OpenWeatherMapResponse getAll(double lat, double lon) {
		try {
			 RestTemplate restTemplate = new RestTemplate();
			 HttpHeaders headers = new HttpHeaders();
			 headers.set(HttpHeaders.ACCEPT, MediaType.APPLICATION_JSON_VALUE);
			 HttpEntity<?> entity = new HttpEntity<>(headers);
			 String url = "https://api.openweathermap.org/data/2.5/weather";
			 String urlTemplate = UriComponentsBuilder.fromHttpUrl(url)
				        .queryParam("lat", "{lat}")
				        .queryParam("lon", "{lon}")
				        .queryParam("appid", "{appid}")
				        .encode()
				        .toUriString();

				Map<String, Object> params = new HashMap<>();
				params.put("lat", lat);
				params.put("lon", lon);
				params.put("appid", "a420a9ccbc94a74f951a2700a264dc8b");
	

				HttpEntity<OpenWeatherMapResponse> response = restTemplate.exchange(
				        urlTemplate,
				        HttpMethod.GET,
				        entity,
				        OpenWeatherMapResponse.class,
				        params
				);return response.getBody();
		} catch (Exception e) {
			e.fillInStackTrace();
		}
		return null;
	}
}
